extends vim
###########################################################################
#                            SnipMate Snippets                            #
###########################################################################
snippet header "Vim Header with MIT License" b!
" vim:ft=vim:fdm=expr:fdl=2
" vim:fde=getline(v\:lnum)=~'^""'?'>'.(matchend(getline(v\:lnum),'""*')-2)\:'='
"
" Copyright (c) <${1:`!v strftime("%Y")`}> <${2:`!v g:snips_author`}>
" 
"						Usage is governed by the MIT License (MIT), to-wit:
"
" Permission is hereby granted, free of charge, to any person obtaining a copy
" of this software and associated documentation files (the "Software"), to deal
" in the Software without restriction, including without limitation the rights
" to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
" copies of the Software, and to permit persons to whom the Software is
" furnished to do so, subject to the following conditions:
" 
" The above copyright notice and this permission notice shall be included in
" all copies or substantial portions of the Software.
" 
" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
" AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
" OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
" THE SOFTWARE.
"
" File:						${3:`!v expand('%:t')`}
" Author:					${2:`!v g:snips_author`}
" Description:		${4}
" Last Modified:	${5:`!v strftime("%B %d, %Y")`}
"
$0
endsnippet

snippet gvar "Global / configuration variable"
if !exists("g:${1:MyUltraImportantVar}")
	let g:$1 = ${2:"${3:<tab>}"}
endif
endsnippet

snippet guard
if exists('${1:did_`!p snip.rv = snip.fn.replace('.','_')`}') || &cp${2: || version < 700}
	finish
endif
let $1 = 1${3}
endsnippet

snippet f
fun ${1:function_name}(${2})
	${3:" code}
endf
endsnippet

snippet for
for ${1:needle} in ${2:haystack}
	${3:" code}
endfor
endsnippet

snippet wh
while ${1:condition}
	${2:" code}
endw
endsnippet

snippet if
if ${1:condition}
	${2:" code}
endif
endsnippet

snippet ife
if ${1:condition}
	${2}
else
	${3}
endif
endsnippet

# vim:ft=snippets:

